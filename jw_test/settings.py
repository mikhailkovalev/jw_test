"""
Django settings for jw_test project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
import yaml

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def place_relative_path_to_base_dir(path: str) -> str:
    if not os.path.isabs(path):
        path = os.path.abspath(os.path.join(
            BASE_DIR,
            path,
        ))
    return path


# See file `project_conf_example.yaml` to write own configuration file
CONFIG_PATH = os.getenv('JW_TEST_CONF') or BASE_DIR / 'project_conf.yaml'
CONFIG_PATH = place_relative_path_to_base_dir(CONFIG_PATH)
print('CONFIG_PATH:', CONFIG_PATH)


def read_config(config_path):
    config_file = open(
        config_path,
        mode='rt',
        encoding='utf-8',
    )
    with config_file:
        config = yaml.load(
            config_file,
            Loader=yaml.FullLoader,
        )

        return config


config = read_config(CONFIG_PATH)
security_section = config['security']
databases_section = config['databases']
static_section = config['static']
i18n_section = config['internationalization']
customization_section = config['customization']
celery_section = config['celery']

DATE_FORMAT = customization_section['DATE_FORMAT']
DATETIME_FORMAT = customization_section['DATETIME_FORMAT']
POST_PREVIEW_LEN = customization_section['POST_PREVIEW_LEN']
POST_PREVIEW_TRAILING = customization_section['POST_PREVIEW_TRAILING']
REST_PAGE_SIZE = customization_section['REST_PAGE_SIZE']

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': REST_PAGE_SIZE,
}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = security_section['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = security_section['DEBUG']

ALLOWED_HOSTS = security_section['ALLOWED_HOSTS']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third-party apps
    'rest_framework',
    'polymorphic',
    'django_celery_results',

    # local apps
    'hosting',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jw_test.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jw_test.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = databases_section
for db_conf in DATABASES.values():
    if db_conf['ENGINE'] == 'django.db.backends.sqlite3':
        db_conf['NAME'] = place_relative_path_to_base_dir(
            path=db_conf['NAME'],
        )
        db_conf['TEST']['NAME'] = place_relative_path_to_base_dir(
            path=db_conf['TEST']['NAME'],
        )


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = i18n_section['LANGUAGE_CODE']

TIME_ZONE = i18n_section['TIME_ZONE']

USE_I18N = i18n_section['USE_I18N']

USE_L10N = i18n_section['USE_L10N']

USE_TZ = i18n_section['USE_TZ']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = static_section['STATIC_URL']
STATIC_ROOT = place_relative_path_to_base_dir(
    path=static_section['STATIC_ROOT'],
)

MEDIA_URL = static_section['MEDIA_URL']
MEDIA_ROOT = Path(place_relative_path_to_base_dir(
    path=static_section['MEDIA_ROOT'],
))
MEDIA_ROOT.mkdir(
    mode=0o755,
    parents=True,
    exist_ok=True,
)

# CELERY SETTINGS:
globals().update(celery_section)
